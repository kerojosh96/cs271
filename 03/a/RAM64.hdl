// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    

    DMux8Way(in=load,a=a1,b=b1,c=c1,d=d1,e=e1,f=f1,g=g1,h=h1,sel=address[0..2]);
    
    
    RAM8(in=in,load=a1,out=aOut,address=address[3..5]);
    RAM8(in=in,load=b1,out=bOut,address=address[3..5]);
    RAM8(in=in,load=c1,out=cOut,address=address[3..5]);
    RAM8(in=in,load=d1,out=dOut,address=address[3..5]);
    RAM8(in=in,load=e1,out=eOut,address=address[3..5]);
    RAM8(in=in,load=f1,out=fOut,address=address[3..5]);
    RAM8(in=in,load=g1,out=gOut,address=address[3..5]);
    RAM8(in=in,load=h1,out=hOut,address=address[3..5]);

    
    Mux8Way16(a=aOut,b=bOut,c=cOut,d=dOut,e=eOut,f=fOut,g=gOut,h=hOut,sel=address[0..2],out=out);
}
